Given an array A of integers and integer K, return the maximum S such that there exists i < j with A[i] + A[j] = S and S < K.
If no i, j exist satisfying this equation, return -1.

Example 1:

Input: A = [34,23,1,24,75,33,54,8], K = 60 Output: 58 Explanation: We can use 34 and 24 to sum 58 which is less than 60. 
Example 2:

Input: A = [10,20,30], K = 15 Output: -1 Explanation: In this case itâ€˜s not possible to get a pair sum less that 15.
Note:

1 <= A.length <= 100
1 <= A[i] <= 1000
1 <= K <= 2000

--------------------------------------------------
hint : find the maxium sum (s) s.t s<k

1.Brute force: O(n^2)
****************************
def sum(arr,n,k):
    s=-1
    
    for i in range(n-1):
        for j in range(i+1,n):
            s1=arr[i]+arr[j]
            if s1<k:
                #print(s1)
                s=max(s1,s)
                
    print(s)
    
2 pointer method After sorting : O(nlgn)
********************************************
def sum(arr,n,k):
    s=-1
    l=0
    r=n-1

    while l<r:
        s1=arr[l]+arr[r]
        if s1<k:
            s=max(s1,s)
            l+=1
        else:
            r-=1
                
    print(s)
