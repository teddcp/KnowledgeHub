There are only three ways in which arr[left], arr[mid], arr[right] can be ordered:

arr[left] < arr[mid] < arr[right]: the maximum value is arr[right]

arr[mid]  < arr[right] < arr[left]: the maximum value is at the left side of mid

arr[right] < arr[left] < arr[mid]: the maximum value is at the right side of mid.

Any other ordering would violate the condition that the list is a rotated, sorted list.


def find_max(arr,length):
    left=0
    right=length-1

    while left<right :
            if arr[left] < arr[right]:
                    return arr[right] 

            mid=(left+right)>>1

            if arr[mid]>arr[right]:
                    left=mid
            else:
                    right=mid-1

    return arr[left]
